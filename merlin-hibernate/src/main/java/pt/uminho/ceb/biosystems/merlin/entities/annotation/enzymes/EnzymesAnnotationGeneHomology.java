package pt.uminho.ceb.biosystems.merlin.entities.annotation.enzymes;
// Generated Jul 16, 2019 10:41:08 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import pt.uminho.ceb.biosystems.merlin.entities.model.ModelSequence;

/**
 * EnzymesAnnotationGeneHomology generated by hbm2java
 */
@Entity
@Table(name = "enzymes_annotation_geneHomology")
public class EnzymesAnnotationGeneHomology implements java.io.Serializable {

	private int SKey;
	private EnzymesAnnotationHomologySetup enzymesAnnotationHomologySetup;
	private ModelSequence modelSequence;
	private String locusTag;
	private String query;
	private String gene;
	private String chromosome;
	private String organelle;
	private Integer uniprotStar;
	private String status;
	private String uniprotEcnumber;
	private Set<EnzymesAnnotationEcNumberRank> enzymesAnnotationEcNumberRanks = new HashSet<EnzymesAnnotationEcNumberRank>(
			0);
	private Set<EnzymesAnnotationProductRank> enzymesAnnotationProductRanks = new HashSet<EnzymesAnnotationProductRank>(
			0);
	private Set<EnzymesAnnotationGeneHomologyHasHomologues> enzymesAnnotationGeneHomologyHasHomologueses = new HashSet<EnzymesAnnotationGeneHomologyHasHomologues>(
			0);
	private Set<EnzymesAnnotationHomologyData> enzymesAnnotationHomologyDatas = new HashSet<EnzymesAnnotationHomologyData>(
			0);

	public EnzymesAnnotationGeneHomology() {
	}

	public EnzymesAnnotationGeneHomology(int SKey, EnzymesAnnotationHomologySetup enzymesAnnotationHomologySetup,
			ModelSequence modelSequence) {
		this.SKey = SKey;
		this.enzymesAnnotationHomologySetup = enzymesAnnotationHomologySetup;
		this.modelSequence = modelSequence;
	}
	
	public EnzymesAnnotationGeneHomology(String locusTag, String uniprotEcnumber) {
		this.locusTag = locusTag;
		this.uniprotEcnumber = uniprotEcnumber;
	}

	public EnzymesAnnotationGeneHomology(int SKey, EnzymesAnnotationHomologySetup enzymesAnnotationHomologySetup,
			ModelSequence modelSequence, String locusTag, String query, String gene, String chromosome,
			String organelle, Integer uniprotStar, String status, String uniprotEcnumber,
			Set<EnzymesAnnotationEcNumberRank> enzymesAnnotationEcNumberRanks,
			Set<EnzymesAnnotationProductRank> enzymesAnnotationProductRanks,
			Set<EnzymesAnnotationGeneHomologyHasHomologues> enzymesAnnotationGeneHomologyHasHomologueses,
			Set<EnzymesAnnotationHomologyData> enzymesAnnotationHomologyDatas) {
		this.SKey = SKey;
		this.enzymesAnnotationHomologySetup = enzymesAnnotationHomologySetup;
		this.modelSequence = modelSequence;
		this.locusTag = locusTag;
		this.query = query;
		this.gene = gene;
		this.chromosome = chromosome;
		this.organelle = organelle;
		this.uniprotStar = uniprotStar;
		this.status = status;
		this.uniprotEcnumber = uniprotEcnumber;
		this.enzymesAnnotationEcNumberRanks = enzymesAnnotationEcNumberRanks;
		this.enzymesAnnotationProductRanks = enzymesAnnotationProductRanks;
		this.enzymesAnnotationGeneHomologyHasHomologueses = enzymesAnnotationGeneHomologyHasHomologueses;
		this.enzymesAnnotationHomologyDatas = enzymesAnnotationHomologyDatas;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator="UseExistingIdOtherwiseGenerateUsingIdentity")
	@GenericGenerator(name = "UseExistingIdOtherwiseGenerateUsingIdentity", strategy = "pt.uminho.ceb.biosystems.merlin.auxiliary.UseExistingIdOtherwiseGenerateUsingIdentity")	
	@Column(name = "s_key", unique = true, nullable = false)
	public int getSKey() {
		return this.SKey;
	}

	public void setSKey(int SKey) {
		this.SKey = SKey;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "homologySetup_s_key", nullable = false)
	public EnzymesAnnotationHomologySetup getEnzymesAnnotationHomologySetup() {
		return this.enzymesAnnotationHomologySetup;
	}

	public void setEnzymesAnnotationHomologySetup(EnzymesAnnotationHomologySetup enzymesAnnotationHomologySetup) {
		this.enzymesAnnotationHomologySetup = enzymesAnnotationHomologySetup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "model_sequence_idsequence", nullable = false)
	public ModelSequence getModelSequence() {
		return this.modelSequence;
	}

	public void setModelSequence(ModelSequence modelSequence) {
		this.modelSequence = modelSequence;
	}

	@Column(name = "locusTag", length = 100)
	public String getLocusTag() {
		return this.locusTag;
	}

	public void setLocusTag(String locusTag) {
		this.locusTag = locusTag;
	}

	@Column(name = "query", length = 100)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@Column(name = "gene", length = 100)
	public String getGene() {
		return this.gene;
	}

	public void setGene(String gene) {
		this.gene = gene;
	}

	@Column(name = "chromosome", length = 20)
	public String getChromosome() {
		return this.chromosome;
	}

	public void setChromosome(String chromosome) {
		this.chromosome = chromosome;
	}

	@Column(name = "organelle", length = 45)
	public String getOrganelle() {
		return this.organelle;
	}

	public void setOrganelle(String organelle) {
		this.organelle = organelle;
	}

	@Column(name = "uniprot_star")
	public Integer getUniprotStar() {
		return this.uniprotStar;
	}

	public void setUniprotStar(Integer uniprotStar) {
		this.uniprotStar = uniprotStar;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "uniprot_ecnumber", length = 150)
	public String getUniprotEcnumber() {
		return this.uniprotEcnumber;
	}

	public void setUniprotEcnumber(String uniprotEcnumber) {
		this.uniprotEcnumber = uniprotEcnumber;
	}


	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGeneHomology")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<EnzymesAnnotationEcNumberRank> getEnzymesAnnotationEcNumberRanks() {
		return this.enzymesAnnotationEcNumberRanks;
	}

	public void setEnzymesAnnotationEcNumberRanks(Set<EnzymesAnnotationEcNumberRank> enzymesAnnotationEcNumberRanks) {
		this.enzymesAnnotationEcNumberRanks = enzymesAnnotationEcNumberRanks;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGeneHomology")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<EnzymesAnnotationProductRank> getEnzymesAnnotationProductRanks() {
		return this.enzymesAnnotationProductRanks;
	}

	public void setEnzymesAnnotationProductRanks(Set<EnzymesAnnotationProductRank> enzymesAnnotationProductRanks) {
		this.enzymesAnnotationProductRanks = enzymesAnnotationProductRanks;
	}
	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGeneHomology")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<EnzymesAnnotationGeneHomologyHasHomologues> getEnzymesAnnotationGeneHomologyHasHomologueses() {
		return this.enzymesAnnotationGeneHomologyHasHomologueses;
	}

	public void setEnzymesAnnotationGeneHomologyHasHomologueses(
			Set<EnzymesAnnotationGeneHomologyHasHomologues> enzymesAnnotationGeneHomologyHasHomologueses) {
		this.enzymesAnnotationGeneHomologyHasHomologueses = enzymesAnnotationGeneHomologyHasHomologueses;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGeneHomology")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<EnzymesAnnotationHomologyData> getEnzymesAnnotationHomologyDatas() {
		return this.enzymesAnnotationHomologyDatas;
	}

	public void setEnzymesAnnotationHomologyDatas(
			Set<EnzymesAnnotationHomologyData> enzymesAnnotationHomologyDatas) {
		this.enzymesAnnotationHomologyDatas = enzymesAnnotationHomologyDatas;
	}
}
