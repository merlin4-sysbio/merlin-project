package pt.uminho.ceb.biosystems.merlin.entities.model;
// Generated Jul 16, 2019 10:41:08 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

/**
 * ModelPathway generated by hbm2java
 */
@Entity
@Table(name = "model_pathway")
public class ModelPathway implements java.io.Serializable {

	private int idpathway;
	private String code;
	private String name;
	private String pathSbmlFile;
	private byte[] image;
	private Set<ModelPathwayHasCompound> modelPathwayHasCompounds = new HashSet<ModelPathwayHasCompound>(0);
	private Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins = new HashSet<ModelPathwayHasModelProtein>(0);
	private Set<ModelPathwayHasReaction> modelPathwayHasReactions = new HashSet<ModelPathwayHasReaction>(0);
	private Set<ModelSuperpathway> modelSuperpathwaysForPathwayIdpathway = new HashSet<ModelSuperpathway>(0);
	private Set<ModelPathwayHasModule> modelPathwayHasModules = new HashSet<ModelPathwayHasModule>(0);
	private Set<ModelSuperpathway> modelSuperpathwaysForSuperpathway = new HashSet<ModelSuperpathway>(0);

	public ModelPathway() {
	}

	public ModelPathway(int idpathway, String code, String name) {
		this.idpathway = idpathway;
		this.code = code;
		this.name = name;
	}

	public ModelPathway(int idpathway, String code, String name, String pathSbmlFile, byte[] image,
			Set<ModelPathwayHasCompound> modelPathwayHasCompounds, Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins,
			Set<ModelPathwayHasReaction> modelPathwayHasReactions,
			Set<ModelSuperpathway> modelSuperpathwaysForPathwayIdpathway,
			Set<ModelPathwayHasModule> modelPathwayHasModules,
			Set<ModelSuperpathway> modelSuperpathwaysForSuperpathway) {
		this.idpathway = idpathway;
		this.code = code;
		this.name = name;
		this.pathSbmlFile = pathSbmlFile;
		this.image = image;
		this.modelPathwayHasCompounds = modelPathwayHasCompounds;
		this.modelPathwayHasModelProteins = modelPathwayHasModelProteins;
		this.modelPathwayHasReactions = modelPathwayHasReactions;
		this.modelSuperpathwaysForPathwayIdpathway = modelSuperpathwaysForPathwayIdpathway;
		this.modelPathwayHasModules = modelPathwayHasModules;
		this.modelSuperpathwaysForSuperpathway = modelSuperpathwaysForSuperpathway;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator="UseExistingIdOtherwiseGenerateUsingIdentity")
	@GenericGenerator(name = "UseExistingIdOtherwiseGenerateUsingIdentity", strategy = "pt.uminho.ceb.biosystems.merlin.auxiliary.UseExistingIdOtherwiseGenerateUsingIdentity")	
	@Column(name = "idpathway", unique = true, nullable = false)
	public int getIdpathway() {
		return this.idpathway;
	}

	public void setIdpathway(int idpathway) {
		this.idpathway = idpathway;
	}

	@Column(name = "code", nullable = false, length = 5)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", nullable = false, length = 120)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "path_sbml_file", length = 200)
	public String getPathSbmlFile() {
		return this.pathSbmlFile;
	}

	public void setPathSbmlFile(String pathSbmlFile) {
		this.pathSbmlFile = pathSbmlFile;
	}

	@Column(name = "image")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelPathwayHasCompound> getModelPathwayHasCompounds() {
		return this.modelPathwayHasCompounds;
	}

	public void setModelPathwayHasCompounds(Set<ModelPathwayHasCompound> modelPathwayHasCompounds) {
		this.modelPathwayHasCompounds = modelPathwayHasCompounds;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelPathwayHasModelProtein> getModelPathwayHasModelProtein() {
		return this.modelPathwayHasModelProteins;
	}

	public void setModelPathwayHasModelProtein(Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins) {
		this.modelPathwayHasModelProteins = modelPathwayHasModelProteins;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelPathwayHasReaction> getModelPathwayHasReactions() {
		return this.modelPathwayHasReactions;
	}

	public void setModelPathwayHasReactions(Set<ModelPathwayHasReaction> modelPathwayHasReactions) {
		this.modelPathwayHasReactions = modelPathwayHasReactions;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathwayByPathwayIdpathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelSuperpathway> getModelSuperpathwaysForPathwayIdpathway() {
		return this.modelSuperpathwaysForPathwayIdpathway;
	}

	public void setModelSuperpathwaysForPathwayIdpathway(Set<ModelSuperpathway> modelSuperpathwaysForPathwayIdpathway) {
		this.modelSuperpathwaysForPathwayIdpathway = modelSuperpathwaysForPathwayIdpathway;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelPathwayHasModule> getModelPathwayHasModules() {
		return this.modelPathwayHasModules;
	}

	public void setModelPathwayHasModules(Set<ModelPathwayHasModule> modelPathwayHasModules) {
		this.modelPathwayHasModules = modelPathwayHasModules;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPathwayBySuperpathway")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelSuperpathway> getModelSuperpathwaysForSuperpathway() {
		return this.modelSuperpathwaysForSuperpathway;
	}

	public void setModelSuperpathwaysForSuperpathway(Set<ModelSuperpathway> modelSuperpathwaysForSuperpathway) {
		this.modelSuperpathwaysForSuperpathway = modelSuperpathwaysForSuperpathway;
	}

}
