package pt.uminho.ceb.biosystems.merlin.entities.interpro;
// Generated Jul 16, 2019 10:41:08 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

/**
 * InterproResult generated by hbm2java
 */
@Entity
@Table(name = "interpro_result")
public class InterproResult implements java.io.Serializable {

	private int id;
	private InterproResults interproResults;
	private String tool;
	private Float evalue;
	private Float score;
	private String familyName;
	private String accession;
	private String name;
	private String ec;
	private String goName;
	private String localization;
	private String databaseName;
	private Set<InterproResultHasModel> interproResultHasModels = new HashSet<InterproResultHasModel>(0);
	private Set<InterproResultHasEntry> interproResultHasEntries = new HashSet<InterproResultHasEntry>(0);
	private Set<InterproLocation> interproLocations = new HashSet<InterproLocation>(0);

	public InterproResult() {
	}

	public InterproResult(int id, InterproResults interproResults, String tool) {
		this.id = id;
		this.interproResults = interproResults;
		this.tool = tool;
	}

	public InterproResult(int id, InterproResults interproResults, String tool, Float evalue, Float score,
			String familyName, String accession, String name, String ec, String goName, String localization,
			String databaseName, Set<InterproResultHasModel> interproResultHasModels,
			Set<InterproResultHasEntry> interproResultHasEntries, Set<InterproLocation> interproLocations) {
		this.id = id;
		this.interproResults = interproResults;
		this.tool = tool;
		this.evalue = evalue;
		this.score = score;
		this.familyName = familyName;
		this.accession = accession;
		this.name = name;
		this.ec = ec;
		this.goName = goName;
		this.localization = localization;
		this.databaseName = databaseName;
		this.interproResultHasModels = interproResultHasModels;
		this.interproResultHasEntries = interproResultHasEntries;
		this.interproLocations = interproLocations;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator="UseExistingIdOtherwiseGenerateUsingIdentity")
	@GenericGenerator(name = "UseExistingIdOtherwiseGenerateUsingIdentity", strategy = "pt.uminho.ceb.biosystems.merlin.auxiliary.UseExistingIdOtherwiseGenerateUsingIdentity")	
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "interpro_results_id", nullable = false)
	public InterproResults getInterproResults() {
		return this.interproResults;
	}

	public void setInterproResults(InterproResults interproResults) {
		this.interproResults = interproResults;
	}

	@Column(name = "tool", nullable = false, length = 250)
	public String getTool() {
		return this.tool;
	}

	public void setTool(String tool) {
		this.tool = tool;
	}

	@Column(name = "eValue", precision = 12, scale = 0)
	public Float getEvalue() {
		return this.evalue;
	}

	public void setEvalue(Float evalue) {
		this.evalue = evalue;
	}

	@Column(name = "score", precision = 12, scale = 0)
	public Float getScore() {
		return this.score;
	}

	public void setScore(Float score) {
		this.score = score;
	}

	@Column(name = "familyName", length = 45)
	public String getFamilyName() {
		return this.familyName;
	}

	public void setFamilyName(String familyName) {
		this.familyName = familyName;
	}

	@Column(name = "accession", length = 45)
	public String getAccession() {
		return this.accession;
	}

	public void setAccession(String accession) {
		this.accession = accession;
	}

	@Column(name = "name", length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ec", length = 45)
	public String getEc() {
		return this.ec;
	}

	public void setEc(String ec) {
		this.ec = ec;
	}

	@Column(name = "goName", length = 250)
	public String getGoName() {
		return this.goName;
	}

	public void setGoName(String goName) {
		this.goName = goName;
	}

	@Column(name = "localization", length = 45)
	public String getLocalization() {
		return this.localization;
	}

	public void setLocalization(String localization) {
		this.localization = localization;
	}

	@Column(name = "databaseName", length = 45)
	public String getDatabaseName() {
		return this.databaseName;
	}

	public void setDatabaseName(String databaseName) {
		this.databaseName = databaseName;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interproResult")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<InterproResultHasModel> getInterproResultHasModels() {
		return this.interproResultHasModels;
	}

	public void setInterproResultHasModels(Set<InterproResultHasModel> interproResultHasModels) {
		this.interproResultHasModels = interproResultHasModels;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interproResult")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<InterproResultHasEntry> getInterproResultHasEntries() {
		return this.interproResultHasEntries;
	}

	public void setInterproResultHasEntries(Set<InterproResultHasEntry> interproResultHasEntries) {
		this.interproResultHasEntries = interproResultHasEntries;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interproResult")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<InterproLocation> getInterproLocations() {
		return this.interproLocations;
	}

	public void setInterproLocations(Set<InterproLocation> interproLocations) {
		this.interproLocations = interproLocations;
	}

}
