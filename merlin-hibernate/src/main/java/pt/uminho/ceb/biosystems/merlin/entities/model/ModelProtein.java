package pt.uminho.ceb.biosystems.merlin.entities.model;
// Generated Sep 11, 2019 1:12:29 PM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import pt.uminho.ceb.biosystems.merlin.entities.experimental.ExperimentalInhibitor;
import pt.uminho.ceb.biosystems.merlin.entities.experimental.ExperimentalSubstrateAffinity;
import pt.uminho.ceb.biosystems.merlin.entities.experimental.ExperimentalTurnoverNumber;
import pt.uminho.ceb.biosystems.merlin.entities.regulatory.RegulatoryEvent;
import pt.uminho.ceb.biosystems.merlin.entities.regulatory.RegulatorySigmaPromoter;

/**
 * ModelProtein generated by hbm2java
 */
@Entity
@Table(name = "model_protein")
public class ModelProtein implements java.io.Serializable {

	private int idprotein;
	private String name;
	private String class_;
	private String inchi;
	private Float molecularWeight;
	private Float molecularWeightExp;
	private Float molecularWeightKd;
	private Float molecularWeightSeq;
	private Float pi;
	private String ecnumber;
	//private Boolean inModel;
	private String source;
	private Set<ExperimentalInhibitor> experimentalInhibitors = new HashSet<ExperimentalInhibitor>(0);
	private Set<ModelSubunit> modelSubunits = new HashSet<ModelSubunit>(0);
	private Set<ModelReactionHasModelProtein> modelReactionHasModelProteins = new HashSet<ModelReactionHasModelProtein>(
			0);
	private Set<ModelEnzymaticCofactor> modelEnzymaticCofactors = new HashSet<ModelEnzymaticCofactor>(0);
	private Set<ModelSubstrateAffinity> modelSubstrateAffinities = new HashSet<ModelSubstrateAffinity>(0);
	private Set<ExperimentalSubstrateAffinity> experimentalSubstrateAffinities = new HashSet<ExperimentalSubstrateAffinity>(
			0);
	private Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors = new HashSet<ModelEnzymaticAlternativeCofactor>(
			0);
	private Set<ModelFunctionalParameter> modelFunctionalParameters = new HashSet<ModelFunctionalParameter>(0);
	private Set<ModelProteinComposition> modelProteinCompositions = new HashSet<ModelProteinComposition>(0);
	private Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins = new HashSet<ModelPathwayHasModelProtein>(0);
	private Set<RegulatoryEvent> regulatoryEvents = new HashSet<RegulatoryEvent>(0);
	private Set<ModelEffector> modelEffectors = new HashSet<ModelEffector>(0);
	private Set<ExperimentalTurnoverNumber> experimentalTurnoverNumbers = new HashSet<ExperimentalTurnoverNumber>(0);
	private Set<RegulatorySigmaPromoter> regulatorySigmaPromoters = new HashSet<RegulatorySigmaPromoter>(0);
	private Set<ModelMetabolicRegulation> modelMetabolicRegulations = new HashSet<ModelMetabolicRegulation>(0);
	private Set<ModelModuleHasModelProtein> modelModuleHasModelProteins = new HashSet<ModelModuleHasModelProtein>(0);

	public ModelProtein() {
	}

	public ModelProtein(int idprotein, String name) {
		this.idprotein = idprotein;
		this.name = name;
	}

	public ModelProtein(int idprotein, String name, String class_, String inchi, Float molecularWeight,
			Float molecularWeightExp, Float molecularWeightKd, Float molecularWeightSeq, Float pi, String ecnumber,
			//Boolean inModel,
			String source, Set<ExperimentalInhibitor> experimentalInhibitors,
			Set<ModelSubunit> modelSubunits, Set<ModelReactionHasModelProtein> modelReactionHasModelProteins,
			Set<ModelEnzymaticCofactor> modelEnzymaticCofactors,
			Set<ModelSubstrateAffinity> modelSubstrateAffinities,
			Set<ExperimentalSubstrateAffinity> experimentalSubstrateAffinities,
			Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors,
			Set<ModelFunctionalParameter> modelFunctionalParameters,
			Set<ModelProteinComposition> modelProteinCompositions,
			Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins, Set<RegulatoryEvent> regulatoryEvents,
			Set<ModelEffector> modelEffectors, Set<ExperimentalTurnoverNumber> experimentalTurnoverNumbers,
			Set<RegulatorySigmaPromoter> regulatorySigmaPromoters,
			Set<ModelMetabolicRegulation> modelMetabolicRegulations,
			Set<ModelModuleHasModelProtein> modelModuleHasModelProteins) {
		this.idprotein = idprotein;
		this.name = name;
		this.class_ = class_;
		this.inchi = inchi;
		this.molecularWeight = molecularWeight;
		this.molecularWeightExp = molecularWeightExp;
		this.molecularWeightKd = molecularWeightKd;
		this.molecularWeightSeq = molecularWeightSeq;
		this.pi = pi;
		this.ecnumber = ecnumber;
		//this.inModel = inModel;
		this.source = source;
		this.experimentalInhibitors = experimentalInhibitors;
		this.modelSubunits = modelSubunits;
		this.modelReactionHasModelProteins = modelReactionHasModelProteins;
		this.modelEnzymaticCofactors = modelEnzymaticCofactors;
		this.modelSubstrateAffinities = modelSubstrateAffinities;
		this.experimentalSubstrateAffinities = experimentalSubstrateAffinities;
		this.modelEnzymaticAlternativeCofactors = modelEnzymaticAlternativeCofactors;
		this.modelFunctionalParameters = modelFunctionalParameters;
		this.modelProteinCompositions = modelProteinCompositions;
		this.modelPathwayHasModelProteins = modelPathwayHasModelProteins;
		this.regulatoryEvents = regulatoryEvents;
		this.modelEffectors = modelEffectors;
		this.experimentalTurnoverNumbers = experimentalTurnoverNumbers;
		this.regulatorySigmaPromoters = regulatorySigmaPromoters;
		this.modelMetabolicRegulations = modelMetabolicRegulations;
		this.modelModuleHasModelProteins = modelModuleHasModelProteins;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator="UseExistingIdOtherwiseGenerateUsingIdentity")
	@GenericGenerator(name = "UseExistingIdOtherwiseGenerateUsingIdentity", strategy = "pt.uminho.ceb.biosystems.merlin.auxiliary.UseExistingIdOtherwiseGenerateUsingIdentity")	
	@Column(name = "idprotein", unique = true, nullable = false)
	public int getIdprotein() {
		return this.idprotein;
	}

	public void setIdprotein(int idprotein) {
		this.idprotein = idprotein;
	}

	@Column(name = "name", nullable = false, length = 400)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "class", length = 120)
	public String getClass_() {
		return this.class_;
	}

	public void setClass_(String class_) {
		this.class_ = class_;
	}

	@Column(name = "inchi")
	public String getInchi() {
		return this.inchi;
	}

	public void setInchi(String inchi) {
		this.inchi = inchi;
	}

	@Column(name = "molecular_weight", precision = 12, scale = 0)
	public Float getMolecularWeight() {
		return this.molecularWeight;
	}

	public void setMolecularWeight(Float molecularWeight) {
		this.molecularWeight = molecularWeight;
	}

	@Column(name = "molecular_weight_exp", precision = 12, scale = 0)
	public Float getMolecularWeightExp() {
		return this.molecularWeightExp;
	}

	public void setMolecularWeightExp(Float molecularWeightExp) {
		this.molecularWeightExp = molecularWeightExp;
	}

	@Column(name = "molecular_weight_kd", precision = 12, scale = 0)
	public Float getMolecularWeightKd() {
		return this.molecularWeightKd;
	}

	public void setMolecularWeightKd(Float molecularWeightKd) {
		this.molecularWeightKd = molecularWeightKd;
	}

	@Column(name = "molecular_weight_seq", precision = 12, scale = 0)
	public Float getMolecularWeightSeq() {
		return this.molecularWeightSeq;
	}

	public void setMolecularWeightSeq(Float molecularWeightSeq) {
		this.molecularWeightSeq = molecularWeightSeq;
	}

	@Column(name = "pi", precision = 12, scale = 0)
	public Float getPi() {
		return this.pi;
	}

	public void setPi(Float pi) {
		this.pi = pi;
	}

	@Column(name = "ecnumber", length = 45)
	public String getEcnumber() {
		return this.ecnumber;
	}

	public void setEcnumber(String ecnumber) {
		this.ecnumber = ecnumber;
	}

//	@Column(name = "inModel")
//	public Boolean getInModel() {
//		return this.inModel;
//	}
//
//	public void setInModel(Boolean inModel) {
//		this.inModel = inModel;
//	}

	@Column(name = "source", length = 45)
	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ExperimentalInhibitor> getExperimentalInhibitors() {
		return this.experimentalInhibitors;
	}

	public void setExperimentalInhibitors(Set<ExperimentalInhibitor> experimentalInhibitors) {
		this.experimentalInhibitors = experimentalInhibitors;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelSubunit> getModelSubunits() {
		return this.modelSubunits;
	}

	public void setModelSubunits(Set<ModelSubunit> modelSubunits) {
		this.modelSubunits = modelSubunits;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelReactionHasModelProtein> getModelReactionHasModelProteins() {
		return this.modelReactionHasModelProteins;
	}

	public void setModelReactionHasModelProteins(Set<ModelReactionHasModelProtein> modelReactionHasModelProteins) {
		this.modelReactionHasModelProteins = modelReactionHasModelProteins;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelEnzymaticCofactor> getModelEnzymaticCofactors() {
		return this.modelEnzymaticCofactors;
	}

	public void setModelEnzymaticCofactors(Set<ModelEnzymaticCofactor> modelEnzymaticCofactors) {
		this.modelEnzymaticCofactors = modelEnzymaticCofactors;
	}
	
	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelSubstrateAffinity> getModelSubstrateAffinities() {
		return this.modelSubstrateAffinities;
	}

	public void setModelSubstrateAffinities(Set<ModelSubstrateAffinity> modelSubstrateAffinities) {
		this.modelSubstrateAffinities = modelSubstrateAffinities;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ExperimentalSubstrateAffinity> getExperimentalSubstrateAffinities() {
		return this.experimentalSubstrateAffinities;
	}

	public void setExperimentalSubstrateAffinities(Set<ExperimentalSubstrateAffinity> experimentalSubstrateAffinities) {
		this.experimentalSubstrateAffinities = experimentalSubstrateAffinities;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelEnzymaticAlternativeCofactor> getModelEnzymaticAlternativeCofactors() {
		return this.modelEnzymaticAlternativeCofactors;
	}

	public void setModelEnzymaticAlternativeCofactors(
			Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors) {
		this.modelEnzymaticAlternativeCofactors = modelEnzymaticAlternativeCofactors;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelFunctionalParameter> getModelFunctionalParameters() {
		return this.modelFunctionalParameters;
	}

	public void setModelFunctionalParameters(Set<ModelFunctionalParameter> modelFunctionalParameters) {
		this.modelFunctionalParameters = modelFunctionalParameters;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelProteinComposition> getModelProteinCompositions() {
		return this.modelProteinCompositions;
	}

	public void setModelProteinCompositions(Set<ModelProteinComposition> modelProteinCompositions) {
		this.modelProteinCompositions = modelProteinCompositions;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelPathwayHasModelProtein> getModelPathwayHasModelProteins() {
		return this.modelPathwayHasModelProteins;
	}

	public void setModelPathwayHasModelProteins(Set<ModelPathwayHasModelProtein> modelPathwayHasModelProteins) {
		this.modelPathwayHasModelProteins = modelPathwayHasModelProteins;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<RegulatoryEvent> getRegulatoryEvents() {
		return this.regulatoryEvents;
	}

	public void setRegulatoryEvents(Set<RegulatoryEvent> regulatoryEvents) {
		this.regulatoryEvents = regulatoryEvents;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelEffector> getModelEffectors() {
		return this.modelEffectors;
	}

	public void setModelEffectors(Set<ModelEffector> modelEffectors) {
		this.modelEffectors = modelEffectors;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ExperimentalTurnoverNumber> getExperimentalTurnoverNumbers() {
		return this.experimentalTurnoverNumbers;
	}

	public void setExperimentalTurnoverNumbers(Set<ExperimentalTurnoverNumber> experimentalTurnoverNumbers) {
		this.experimentalTurnoverNumbers = experimentalTurnoverNumbers;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<RegulatorySigmaPromoter> getRegulatorySigmaPromoters() {
		return this.regulatorySigmaPromoters;
	}

	public void setRegulatorySigmaPromoters(Set<RegulatorySigmaPromoter> regulatorySigmaPromoters) {
		this.regulatorySigmaPromoters = regulatorySigmaPromoters;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelMetabolicRegulation> getModelMetabolicRegulations() {
		return this.modelMetabolicRegulations;
	}

	public void setModelMetabolicRegulations(Set<ModelMetabolicRegulation> modelMetabolicRegulations) {
		this.modelMetabolicRegulations = modelMetabolicRegulations;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelProtein")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<ModelModuleHasModelProtein> getModelModuleHasModelProteins() {
		return this.modelModuleHasModelProteins;
	}

	public void setModelModuleHasModelProteins(Set<ModelModuleHasModelProtein> modelModuleHasModelProteins) {
		this.modelModuleHasModelProteins = modelModuleHasModelProteins;
	}

}
