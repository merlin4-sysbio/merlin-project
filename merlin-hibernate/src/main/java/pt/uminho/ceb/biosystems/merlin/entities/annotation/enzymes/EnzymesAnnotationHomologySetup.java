package pt.uminho.ceb.biosystems.merlin.entities.annotation.enzymes;
// Generated Jul 16, 2019 10:41:08 AM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

/**
 * EnzymesAnnotationHomologySetup generated by hbm2java
 */
@Entity
@Table(name = "enzymes_annotation_homologySetup")
public class EnzymesAnnotationHomologySetup implements java.io.Serializable {

	private int SKey;
	private String program;
	private String programVersion;
	private String databaseId;
	private String evalue;
	private String lowerIdentity;
	private String upperIdentity;
	private String positives;
	private String queryCoverage;
	private String targetCoverage;
	private String matrix;
	private String wordSize;
	private String gapCosts;
	private Integer maxNumberOfAlignments;
	private Date date;
	private Set<EnzymesAnnotationGeneHomology> enzymesAnnotationGeneHomologies = new HashSet<EnzymesAnnotationGeneHomology>(
			0);

	public EnzymesAnnotationHomologySetup() {
	}

	public EnzymesAnnotationHomologySetup(int SKey) {
		this.SKey = SKey;
	}

	public EnzymesAnnotationHomologySetup(int SKey, String program, String programVersion, String databaseId,
			String evalue, String lowerIdentity, String upperIdentity, String positives, String queryCoverage, String targetCoverage,
			String matrix, String wordSize, String gapCosts, Integer maxNumberOfAlignments, Date date,
			Set<EnzymesAnnotationGeneHomology> enzymesAnnotationGeneHomologies) {
		this.SKey = SKey;
		this.program = program;
		this.programVersion = programVersion;
		this.databaseId = databaseId;
		this.evalue = evalue;
		this.matrix = matrix;
		this.wordSize = wordSize;
		this.gapCosts = gapCosts;
		this.maxNumberOfAlignments = maxNumberOfAlignments;
		this.date = date;
		this.enzymesAnnotationGeneHomologies = enzymesAnnotationGeneHomologies;
		this.lowerIdentity = lowerIdentity;
		this.upperIdentity = upperIdentity;
		this.positives = positives;
		this.queryCoverage = queryCoverage;
		this.targetCoverage = targetCoverage;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator="UseExistingIdOtherwiseGenerateUsingIdentity")
	@GenericGenerator(name = "UseExistingIdOtherwiseGenerateUsingIdentity", strategy = "pt.uminho.ceb.biosystems.merlin.auxiliary.UseExistingIdOtherwiseGenerateUsingIdentity")	
	@Column(name = "s_key", unique = true, nullable = false)
	public int getSKey() {
		return this.SKey;
	}

	public void setSKey(int SKey) {
		this.SKey = SKey;
	}

	@Column(name = "program", length = 45)
	public String getProgram() {
		return this.program;
	}

	public void setProgram(String program) {
		this.program = program;
	}

	@Column(name = "program_version")
	public String getProgramVersion() {
		return this.programVersion;
	}

	public void setProgramVersion(String programVersion) {
		this.programVersion = programVersion;
	}

	@Column(name = "databaseID")
	public String getDatabaseId() {
		return this.databaseId;
	}

	public void setDatabaseId(String databaseId) {
		this.databaseId = databaseId;
	}

	@Column(name = "eValue", length = 45)
	public String getEvalue() {
		return this.evalue;
	}

	public void setEvalue(String evalue) {
		this.evalue = evalue;
	}
	
	@Column(name = "lowerIdentity", length = 45)
	public String getLowerIdentity() {
		return this.lowerIdentity;
	}

	public void setLowerIdentity(String lowerIdentity) {
		this.lowerIdentity = lowerIdentity;
	}
	
	@Column(name = "upperIdentity", length = 45)
	public String getUpperIdentity() {
		return this.upperIdentity;
	}

	public void setUpperIdentity(String upperIdentity) {
		this.upperIdentity = upperIdentity;
	}
	
	@Column(name = "positives", length = 45)
	public String getPositives() {
		return this.positives;
	}

	public void setPositives(String positives) {
		this.positives = positives;
	}
	
	@Column(name = "queryCoverage", length = 45)
	public String getQueryCoverage() {
		return this.queryCoverage;
	}

	public void setQueryCoverage(String queryCoverage) {
		this.queryCoverage = queryCoverage;
	}
	
	@Column(name = "targetCoverage", length = 45)
	public String getTargetCoverage() {
		return this.targetCoverage;
	}

	public void setTargetCoverage(String targetCoverage) {
		this.targetCoverage = targetCoverage;
	}

	@Column(name = "matrix", length = 45)
	public String getMatrix() {
		return this.matrix;
	}

	public void setMatrix(String matrix) {
		this.matrix = matrix;
	}

	@Column(name = "wordSize", length = 5)
	public String getWordSize() {
		return this.wordSize;
	}

	public void setWordSize(String wordSize) {
		this.wordSize = wordSize;
	}

	@Column(name = "gapCosts", length = 15)
	public String getGapCosts() {
		return this.gapCosts;
	}

	public void setGapCosts(String gapCosts) {
		this.gapCosts = gapCosts;
	}

	@Column(name = "maxNumberOfAlignments")
	public Integer getMaxNumberOfAlignments() {
		return this.maxNumberOfAlignments;
	}

	public void setMaxNumberOfAlignments(Integer maxNumberOfAlignments) {
		this.maxNumberOfAlignments = maxNumberOfAlignments;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationHomologySetup")
	@OnDelete(action = OnDeleteAction.CASCADE)
	public Set<EnzymesAnnotationGeneHomology> getEnzymesAnnotationGeneHomologies() {
		return this.enzymesAnnotationGeneHomologies;
	}

	public void setEnzymesAnnotationGeneHomologies(Set<EnzymesAnnotationGeneHomology> enzymesAnnotationGeneHomologies) {
		this.enzymesAnnotationGeneHomologies = enzymesAnnotationGeneHomologies;
	}

}
